{"version":3,"sources":["components/Employees/Employeeslist.js","components/App.js","index.js"],"names":["employeeslist","props","nameslist","names","map","name","empname","nametext","captilizename","charAt","toUpperCase","slice","className","type","id","key","value","onChange","e","update","target","onClick","deletename","onSubmit","submitname","addnames","placeholder","required","App","state","currentname","inputHandler","event","inputname","setState","Date","now","onsubmitHandler","preventDefault","newname","text","deleteHandler","newnames","filter","updatenameHandler","Employeeslist","this","Component","ReactDom","render","document","getElementById"],"mappings":"gNAiDeA,G,MA/CO,SAACC,GACpB,IAAMC,EAAYD,EAAME,MAAMC,KAAI,SAACC,GAChC,IAAMC,EAAUD,EAAKE,SACfC,EAAgBF,EAAQG,OAAO,GAAGC,cAAgBJ,EAAQK,MAAM,GACtE,OACG,qBAAoBC,UAAU,OAA9B,SACG,8BACG,uBACGA,UAAU,YACVC,KAAK,OACLC,GAAIT,EAAKU,IACTC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOjB,EAAMkB,OAAOD,EAAEE,OAAOJ,MAAOX,EAAKU,QAEtD,+BACG,mBACGH,UAAU,cACVS,QAAS,kBAAMpB,EAAMqB,WAAWjB,EAAKU,cAZvCV,EAAKU,QAoBrB,OACG,sBAAKH,UAAU,MAAf,UACG,gDACA,uBAAMW,SAAUtB,EAAMuB,WAAtB,UACG,uBACGZ,UAAU,MACVI,MAAOf,EAAMe,MACbH,KAAK,OACLI,SAAUhB,EAAMwB,SAChBC,YAAY,mBACZC,UAAQ,IAGX,wBAAQd,KAAK,SAASD,UAAU,kBAAhC,oBAIFV,OC+BK0B,E,4MAvEZC,MAAQ,CACL1B,MAAO,GACP2B,YAAa,CACVvB,SAAU,GACVQ,IAAK,K,EAIXgB,aAAe,SAACC,GACb,IAAMC,EAAYD,EAAMZ,OAAOJ,MAC/B,EAAKkB,SAAS,CACXJ,YAAa,CACVvB,SAAU0B,EACVlB,IAAKoB,KAAKC,U,EAKnBC,gBAAkB,SAACnB,GAChBA,EAAEoB,iBACF,IAAMC,EAAU,EAAKV,MAAMC,YAC3B,GAAqB,KAAjBS,EAAQC,KAAa,CACtB,IAAMrC,EAAK,sBAAO,EAAK0B,MAAM1B,OAAlB,CAAyBoC,IAEpC,EAAKL,SAAS,CACX/B,MAAOA,EACP2B,YAAa,CACVvB,SAAU,GACVQ,IAAK,Q,EAMjB0B,cAAgB,SAAC1B,GACd,IAAM2B,EAAW,EAAKb,MAAM1B,MAAMwC,QAAO,SAACtC,GAAD,OAAUA,EAAKU,MAAQA,KAChE,EAAKmB,SAAS,CACX/B,MAAOuC,K,EAIbE,kBAAoB,SAACJ,EAAMzB,GACxB,IAAM2B,EAAW,EAAKb,MAAM1B,MAC5BuC,EAAStC,KAAI,SAACC,GAIX,OAHIA,EAAKU,MAAQA,IACdV,EAAKE,SAAWiC,GAEZnC,KAGV,EAAK6B,SAAS,CACX/B,MAAOuC,K,uDAKV,OACG,8BACG,cAACG,EAAD,CACGpB,SAAUqB,KAAKf,aACfP,WAAYsB,KAAKT,gBACjBf,WAAYwB,KAAKL,cACjBtC,MAAO2C,KAAKjB,MAAM1B,MAClBa,MAAO8B,KAAKjB,MAAMC,YAAYvB,SAC9BY,OAAQ2B,KAAKF,0B,GAjEVG,aCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.111ddfaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./employees.css\";\r\nconst employeeslist = (props) => {\r\n   const nameslist = props.names.map((name) => {\r\n      const empname = name.nametext;\r\n      const captilizename = empname.charAt(0).toUpperCase() + empname.slice(1);\r\n      return (\r\n         <div key={name.key} className=\"list\">\r\n            <p>\r\n               <input\r\n                  className=\"listinput\"\r\n                  type=\"text\"\r\n                  id={name.key}\r\n                  value={captilizename}\r\n                  onChange={(e) => props.update(e.target.value, name.key)}\r\n               />\r\n               <span>\r\n                  <i\r\n                     className=\"fa fa-trash\"\r\n                     onClick={() => props.deletename(name.key)}\r\n                  ></i>\r\n               </span>\r\n            </p>\r\n         </div>\r\n      );\r\n   });\r\n\r\n   return (\r\n      <div className=\"box\">\r\n         <h1>Employees List</h1>\r\n         <form onSubmit={props.submitname}>\r\n            <input\r\n               className=\"inp\"\r\n               value={props.value}\r\n               type=\"text\"\r\n               onChange={props.addnames}\r\n               placeholder=\"add name here...\"\r\n               required\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n               ADD\r\n            </button>\r\n         </form>\r\n         {nameslist}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default employeeslist;\r\n","import React, { Component } from \"react\";\r\nimport Employeeslist from \"./Employees/Employeeslist\";\r\n\r\nclass App extends Component {\r\n   state = {\r\n      names: [],\r\n      currentname: {\r\n         nametext: \"\",\r\n         key: \"\",\r\n      },\r\n   };\r\n\r\n   inputHandler = (event) => {\r\n      const inputname = event.target.value;\r\n      this.setState({\r\n         currentname: {\r\n            nametext: inputname,\r\n            key: Date.now(),\r\n         },\r\n      });\r\n   };\r\n\r\n   onsubmitHandler = (e) => {\r\n      e.preventDefault();\r\n      const newname = this.state.currentname;\r\n      if (newname.text !== \"\") {\r\n         const names = [...this.state.names, newname];\r\n\r\n         this.setState({\r\n            names: names,\r\n            currentname: {\r\n               nametext: \"\",\r\n               key: \"\",\r\n            },\r\n         });\r\n      }\r\n   };\r\n\r\n   deleteHandler = (key) => {\r\n      const newnames = this.state.names.filter((name) => name.key !== key);\r\n      this.setState({\r\n         names: newnames,\r\n      });\r\n   };\r\n\r\n   updatenameHandler = (text, key) => {\r\n      const newnames = this.state.names;\r\n      newnames.map((name) => {\r\n         if (name.key === key) {\r\n            name.nametext = text;\r\n         }\r\n         return name;\r\n      });\r\n\r\n      this.setState({\r\n         names: newnames,\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Employeeslist\r\n               addnames={this.inputHandler}\r\n               submitname={this.onsubmitHandler}\r\n               deletename={this.deleteHandler}\r\n               names={this.state.names}\r\n               value={this.state.currentname.nametext}\r\n               update={this.updatenameHandler}\r\n            />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}